function [BW,maskedImage] = segmentImage(X)
%segmentImage Segment image using auto-generated code from imageSegmenter app
%  [BW,MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
%  code from the imageSegmenter app. The final segmentation is returned in
%  BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 06-Jun-2022
%----------------------------------------------------
% S= im2double(X);
% Gray_Image = (S-min(S(:)))./(max(S(:))-min(S(:)));
% Enhanced_Image = adapthisteq(Gray_Image, 'numTiles', [8 8], 'nBins', 128,'ClipLimit', 0.1);

% n = 2;  
% Idouble = im2double(X); 
% % avg = mean2(Idouble);
% % sigma = std2(Idouble);
% % LL=max([avg-n*sigma 0]);
% % UL=min([avg+n*sigma 1]);
% LL=quantile(Idouble(:),0.025);
% UL=quantile(Idouble(:),0.975);

% Adjust data to span data range.
% X = imadjust(X,[LL UL],[]);
X = imadjust(X);

N=16;
T = adaptthresh(X,0.6,'NeighborhoodSize',2*floor(size(X)/N)+1,'Statistic','gaussian','ForegroundPolarity','bright');

% Threshold image - adaptive threshold
% BW = imbinarize(X, 'adaptive', 'Sensitivity', 0.600000, 'ForegroundPolarity', 'bright');
BW = imbinarize(X, T);

% Active contour
% iterations = 50;
% BW = activecontour(X, BW, iterations, 'edge');

% Invert mask
BW = imcomplement(BW);

%%
% Dilate mask with disk
% radius = 1;%3
% decomposition = 0;
% se = strel('disk', radius, decomposition);
% BW = imdilate(BW, se);

%Erode mask with disk
% radius = 1;
% decomposition = 0;
% se = strel('disk', radius, decomposition);
% BW = imerode(BW, se);
%%
% Open mask with disk
radius = 5; %Tried 8, masks became smaller
decomposition = 0;
se = strel('disk', radius, decomposition);
BW = imopen(BW, se);

% Close mask with disk
radius = 1; %How many there should be? smaller is better cause they're single disks, not groups of disks
decomposition = 0;
se1 = strel('disk', radius, decomposition);
BW = imclose(BW, se1);

% BW = imfill(BW,'holes');

% Create masked image.
maskedImage = X;
maskedImage(~BW) = 0;
end

